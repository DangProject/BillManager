<#@ template language="C#" hostspecific="True" debug="True" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#
string input_file = this.Host.ResolvePath("..\\..\\..\\Include\\productver.h");    //C++ header file path "..\\..\\..\\Include\\RegDefines.h"
StreamReader defines = new StreamReader(input_file); 
#>
//********************************************************************************************************
//“INTEL CONFIDENTIAL
//Copyright © 2013 Intel Corporation. All Rights Reserved.
//
//The source code contained or described herein and all documents related to the source code ("Material") 
//are owned by Intel Corporation or its suppliers or licensors. Title to the Material remains with Intel 
//Corporation or its suppliers and licensors. The Material may contain trade secrets and proprietary and 
//confidential information of Intel Corporation and its suppliers and licensors, and is protected by 
//worldwide copyright and trade secret laws and treaty provisions. No part of the Material may be used, 
//copied, reproduced, modified, published, uploaded, posted, transmitted, distributed, or disclosed in 
//any way without Intel’s prior express written permission. 
//
//No license under any patent, copyright, trade secret or other intellectual property right is granted to
//or conferred upon you by disclosure or delivery of the Materials, either expressly, by implication, 
//inducement, estoppel or otherwise. Any license under such intellectual property rights must be express 
//and approved by Intel in writing.
//
//Unless otherwise agreed by Intel in writing, you may not remove or alter this notice or any other notice 
//embedded in Materials by Intel or Intel’s suppliers or licensors in any way.”
//********************************************************************************************************

using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("UI Controls")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Intel Corporation")]
[assembly: AssemblyProduct("")]
[assembly: AssemblyCopyright("Copyright © 2013 Intel Corporation")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]


// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

//In order to begin building localizable applications, set 
//<UICulture>CultureYouAreCodingWith</UICulture> in your .csproj file
//inside a <PropertyGroup>.  For example, if you are using US english
//in your source files, set the <UICulture> to en-US.  Then uncomment
//the NeutralResourceLanguage attribute below.  Update the "en-US" in
//the line below to match the UICulture setting in the project file.

//[assembly: NeutralResourcesLanguage("en", UltimateResourceFallbackLocation.Satellite)]

[assembly: ThemeInfo(
    ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located
    //(used if a resource is not found in the page, 
    // or application resource dictionaries)
    ResourceDictionaryLocation.SourceAssembly //where the generic resource dictionary is located
    //(used if a resource is not found in the page, 
    // app, or any theme specific resource dictionaries)
)]
 

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion("1.0.*")]

<#
    // constants definitions

    while (defines.Peek() >= 0)
    {
        string def = defines.ReadLine();

        string[] parts;
        
        string[] stringSeparator = new string[] {"//"}; 
		parts = def.Split(stringSeparator, StringSplitOptions.RemoveEmptyEntries);	// remove from comment to end of line
        if (parts.Length > 0)
			def = parts[0];
			
        if (def.Length > 3 && def.StartsWith("#define"))
        {
			char[] delimiters = new char[] { '\t', ' ' };	// , '(', ')' 
			            
            parts = def.Split(delimiters, StringSplitOptions.RemoveEmptyEntries);

            if (parts.Length > 2 && parts[1].Equals("CS_FULL_PRODUCT_VERSION_STR"))
            {
#>
[assembly: AssemblyVersion(<#=parts[2]#>)]
[assembly: AssemblyFileVersion(<#=parts[2]#>)]
<#
            }
        }
    } 
#>



