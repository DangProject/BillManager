//********************************************************************************************************
//“INTEL CONFIDENTIAL
//Copyright © 2014. Intel Corporation.  All Rights Reserved.
//
//The source code contained or described herein and all documents related to the source code ("Material") 
//are owned by Intel Corporation or its suppliers or licensors. Title to the Material remains with Intel 
//Corporation or its suppliers and licensors. The Material may contain trade secrets and proprietary and 
//confidential information of Intel Corporation and its suppliers and licensors, and is protected by 
//worldwide copyright and trade secret laws and treaty provisions. No part of the Material may be used, 
//copied, reproduced, modified, published, uploaded, posted, transmitted, distributed, or disclosed in 
//any way without Intel’s prior express written permission. 
//
//No license under any patent, copyright, trade secret or other intellectual property right is granted to
//or conferred upon you by disclosure or delivery of the Materials, either expressly, by implication, 
//inducement, estoppel or otherwise. Any license under such intellectual property rights must be express 
//and approved by Intel in writing.
//
//Unless otherwise agreed by Intel in writing, you may not remove or alter this notice or any other notice 
//embedded in Materials by Intel or Intel’s suppliers or licensors in any way.”
//********************************************************************************************************

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Controls.Primitives;

namespace UI.Controls
{
    public class EditButton : Button
    {
        static EditButton()
        {
            DefaultStyleKeyProperty.OverrideMetadata(typeof(EditButton), new FrameworkPropertyMetadata(typeof(EditButton)));
        }

        public static readonly DependencyProperty PencilHeightProperty =
            DependencyProperty.Register("PencilHeight", typeof(int), typeof(EditButton), new UIPropertyMetadata(12));
        public static readonly DependencyProperty PencilWidthProperty =
            DependencyProperty.Register("PencilWidth", typeof(int), typeof(EditButton), new UIPropertyMetadata(12));

        public int PencilHeight
        {
            get { return (int)GetValue(PencilHeightProperty); }
            set { SetValue(PencilHeightProperty, value); }
        }
        public int PencilWidth
        {
            get { return (int)GetValue(PencilWidthProperty); }
            set { SetValue(PencilWidthProperty, value); }
        }
    }
}
